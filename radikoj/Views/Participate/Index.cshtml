@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@inject IOptions<RequestLocalizationOptions> Options
@inject SharedViewLocalizer Localizer
@model Survey

@{
	ViewData["Title"] = Localizer["Survey"];
	var GroupLocalizer = Localizer.ScopeForGroup(Model!.LocalGroup);
	var Preview = ViewBag.Preview != null && ViewBag.Preview == true;
	var AllowNext = ViewBag.AllowNext != null && ViewBag.AllowNext == true;

	var cultureItems = Options.Value!.SupportedCultures!
		.Select(x => new SelectListItem { Value = x.TwoLetterISOLanguageName, Text = x.NativeName })
		.ToList();
	var requestCulture = Context.Features.Get<IRequestCultureFeature>();
}

<section class="hero is-small is-primary">
	<div class="hero-body">
		<h1 class="title">@Localizer["Survey"]</h1>
		<h2 class="subtitle">@GroupLocalizer[Model!.Description]</h2>
	</div>
</section>
<div class="container">
	<section class="section">
		@if (Preview)
		{
			<div class="notification">
				@Localizer["This survey is in preview mode, you may not submit."]
			</div>
		}

		<form class="form" action="/Participate/SubmitResult" method="POST">
			@* Survey Questions*@
			<input type="hidden" name="meta-survey-id" value="@Model.Id" />
			@foreach (var item in Model.Items.OrderBy(i => i.Position))
			{
				@switch (item.ItemType)
				{
					@case SurveyItemType.FreeResponse:
						<div class="field">
							<label class="label">@GroupLocalizer[item.Label]</label>
							<div class="control">
								<input class="input" type="text" name="@item.Name" required />
							</div>
						</div>
						break;
					@case SurveyItemType.SingleChoice:
						<div class="field">
							<label class="label">
								@GroupLocalizer[item.Label]
							</label>
							<div class="control">
							@foreach (var option in item.ParseContents())
							{
								<label class="radio">
									<input type="radio" name="@item.Name" value="@option" /> @* TODO: make first one required *@
									@GroupLocalizer[option]
								</label>
								<br />
							}
							</div>
						</div>
						break;
					@case SurveyItemType.MultiChoice:
						<div class="field">
							<label class="label">
								@GroupLocalizer[item.Label]
							</label>
							<div class="control">
							@foreach (var option in item.ParseContents())
							{
								<label class="checkbox">
									<input type="checkbox" name="@item.Name" value="@option"> @* TODO: make first one required *@
									@GroupLocalizer[option]
								</label>
								<br />
							}
							</div>
						</div>
						break;
				}
			}
			@*  Auto-Detecting, retaining this in case auto-detection needs to be removed.
			<div class="field">
				<label class="label">What language were your responses typed in?</label>
				<div class="control">
					<span class="select is-small">
						<select name="meta-language" asp-items="cultureItems" required>
						</select>
					</span>
				</div>
			</div> *@

			@* Meta-questions *@
			<hr />
			<p class="is-small">
				@Localizer["The following section will help us in analyzing the global impact of our project."]
				<span class="has-text-weight-bold">@Localizer["You may omit these details if you do not wish to be identified."]</span>
			</p>
			<div class="field">
				<div class="control">
					<span class="select is-small">
						<select name="meta-country" id="meta-country">
							<option value="null">@Localizer["Where do you teach?"]</option>
						</select>
					</span>
				</div>
			</div>
			<hr />
			
			<div class="control">
				@if (Preview)
				{
					<button class="button is-success" type="submit" name="route" value="preview" disabled>@Localizer["Submit and Answer Another"]</button>
					<button class="button is-success" type="submit" name="route" value="preview" disabled>@Localizer["Submit and View Results"]</button>
				}
				else
				{
					<button class="button is-success" type="submit" name="route" value="another" @if (!AllowNext) { @Html.Raw("disabled"); } title="@Localizer["No more surveys to answer"]">@Localizer["Submit and Answer Another"]</button>
					<button class="button is-success" type="submit" name="route" value="results">@Localizer["Submit and View Results"]</button>	
				}
				<a class="button is-warning" asp-action="Results" asp-route-id="@Model.Id">@Localizer["View Results"]</a>
				<a class="button is-link" asp-action="List">@Localizer["View all Surveys"]</a>
			</div>
		</form>
	</section>
</div>

<script>
	const el = document.getElementById("meta-country");
	fetch("/js/Countries.json").then(r => r.json()).then(data => {
		data.forEach(x => {
			el.appendChild(new Option(x.Country, x.Abbreviation));
		});
	})
</script>